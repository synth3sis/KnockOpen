#!/bin/bash

IP=$1
port=$2

WHERE=$(hostname)
WHO="(knockopen[$$])"

iptlist="iptables -L INPUT --numeric --line-numbers"
iptadd="iptables -A INPUT"
iptrem="iptables -D INPUT"

### Function: RegEx IPv4 validation
function validIP() {
	if [[ $1 =~ ^([0-9]{1,3}\.){3}[0-9]{1,3}$ ]]; then
		return 0
	else
		return 1
	fi
}


### Function: Register log, syslog format compliant
function msg-log() {
	echo -e "$WHO $1"
}


### Function: check if user is root
function check-user() {
	return $(id -u)
}


### Function: check iptables and restore standard block connection (called once established connection is closed by user)
function drop-active-connection() {
	srcIP=$1

	msg-log "$srcIP closed connection. Restoring standard block for incoming and established connections"

	forwd_rule=$($iptlist  |grep "$srcIP" |grep -E "^[0-9]+\s+ACCEPT" |grep "RELATED,ESTABLISHED" |head -1 |awk '{print $1}')
	$iptrem $(echo $forwd_rule |awk '{print $1}') && \
		msg-log "$srcIP closed connection. standard block restored successfully"
}


### Function: check iptables and allow connection for 20 seconds from public IP
function temp-allow-connection() {
	srcIP=$1
	port=$2

	msg-log "$srcIP knocking sequence accepted on port $port. Allowed to connect for 20 seconds"

	accept_rule=$($iptlist |grep "tcp dpt:$port" |grep -E "^[0-9]+\s+ACCEPT" |grep -v "RELATED,ESTABLISHED" |head -1)
	drop_rule=$($iptlist   |grep "tcp dpt:$port" |grep -E "^[0-9]+\s+DROP" |head -1)
	forwd_rule=$($iptlist  |grep "$srcIP" |grep -E "^[0-9]+\s+ACCEPT" |grep "RELATED,ESTABLISHED" |head -1)

	# Remove block, then allow only IP, then keep ESTABLISHED connections up, finally restore block for everyone else
	[[ "$drop_rule" == "" ]]   || $iptrem $(echo $drop_rule |awk '{print $1}')
	[[ "$accept_rule" == "" ]] && $iptadd -s $srcIP -p tcp --dport $port -j ACCEPT
	[[ "$forwd_rule" == "" ]]  && $iptadd -s $srcIP -p tcp -m state --state ESTABLISHED,RELATED -j ACCEPT

	$iptadd -p tcp --dport $port -j DROP		# DROP rule must always be the last one computed

	sleep 20

	# Restore blocking rule only for NEW connections from that IP. Mantain blocking rule for everyone else
	$iptrem $($iptlist |grep "tcp dpt:$port" |grep -E "^[0-9]+\s+ACCEPT" |grep -v "RELATED,ESTABLISHED" |head -1 |awk '{print $1}') && \
		msg-log "$srcIP is allowed to mantain connection. Everything else is blocked"
}



if [[ $(check-user) -ne 0 ]]; then
	echo "You must be root to run knockopen. Exit"
	exit 1
fi

[[ "$IP" != "" ]] || exit 1

if [[ $(validIP "$IP") -ne 0 ]]; then
	echo "Not a valid IP. Exit"
	exit 2
fi

if [[ "$2" == "restore-block" ]]; then
	drop-active-connection $IP
else
	temp-allow-connection $IP $port
fi
